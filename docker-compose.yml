version: '3.8'

services:
  # API Gateway (KrakenD) will be added here
  # gateway:
  #   ...

  # KeyCloak service
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    command: ["start-dev", "--import-realm"]
    volumes:
      - ./education-realm.json:/opt/keycloak/data/import/education-realm.json
    networks:
      - microservices-network

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - microservices-network

  # KrakenD API Gateway
  krakend:
    build:
      context: ./docker/krakend
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - keycloak
    networks:
      - microservices-network
    environment:
      - KRAKEND_PORT=8080
      - KRAKEND_HOST=0.0.0.0
    volumes:
      - ./docker/krakend/config/krakend.json:/etc/krakend/krakend.json

networks:
  microservices-network:
    driver: bridge

volumes:
  kafka_data:
  zookeeper_data:
